{"version": "1.0", "first_seen_at": "2024-02-08T18:36:01.841837", "updated_at": "2024-02-08T18:36:01.841856", "last_commited_at": "2023-10-17T15:52:30", "purl": "pkg:githubactions/actions/checkout@v4", "analysis_result": "", "analysis_details": "", "package_ecosystem": "githubactions", "package_namespace": "actions", "package_name": "checkout", "package_version": "v4", "source_scm_type": "github", "source_git_repo": "actions/checkout", "source_git_repo_path": null, "source_git_ref": "v4", "source_git_commit_sha": "b4ffde65f46336ab88eb53be808477a3936bae11", "package_dependencies": [], "build_dependencies": ["pkg:githubactions/actions/checkout@v3", "pkg:githubactions/github/codeql-action/init@v2", "pkg:githubactions/github/codeql-action/analyze@v2", "pkg:githubactions/actions/upload-artifact@v2", "pkg:githubactions/actions/setup-node@v1"], "github_actions_workflows": [{"path": ".github/workflows/check-dist.yml", "events": [{"name": "push", "types": [], "branches": ["main"], "branches_ignore": [], "paths": [], "paths_ignore": [], "tags": [], "tags_ignore": [], "cron": [], "inputs": [], "outputs": [], "secrets": [], "workflows": []}, {"name": "pull_request", "types": [], "branches": [], "branches_ignore": [], "paths": [], "paths_ignore": [], "tags": [], "tags_ignore": [], "cron": [], "inputs": [], "outputs": [], "secrets": [], "workflows": []}, {"name": "workflow_dispatch", "types": [], "branches": [], "branches_ignore": [], "paths": [], "paths_ignore": [], "tags": [], "tags_ignore": [], "cron": [], "inputs": [], "outputs": [], "secrets": [], "workflows": []}], "permissions": [], "env": [], "jobs": [{"id": "check-dist", "name": null, "permissions": [], "needs": [], "if": null, "runs_on": ["ubuntu-latest"], "container": null, "environment": [], "outputs": [], "env": [], "steps": [{"id": null, "name": null, "if": null, "env": [], "uses": "actions/checkout@v3", "shell": null, "run": null, "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Set Node.js 20.x", "if": null, "env": [], "uses": "actions/setup-node@v1", "shell": null, "run": null, "working_directory": null, "with": [{"name": "node-version", "value": "20.x"}], "with_ref": null, "with_script": null}, {"id": null, "name": "Install dependencies", "if": null, "env": [], "uses": null, "shell": null, "run": "npm ci", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Rebuild the index.js file", "if": null, "env": [], "uses": null, "shell": null, "run": "npm run build", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Compare the expected and actual dist/ directories", "if": null, "env": [], "uses": null, "shell": null, "run": "if [ \"$(git diff --ignore-space-at-eol dist/ | wc -l)\" -gt \"0\" ]; then\n echo \"Detected uncommitted changes after build. See status below:\"\n git diff\n exit 1\nfi\n", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": "${{ failure() && steps.diff.conclusion == 'failure' }}", "env": [], "uses": "actions/upload-artifact@v2", "shell": null, "run": null, "working_directory": null, "with": [{"name": "name", "value": "dist"}, {"name": "path", "value": "dist/"}], "with_ref": null, "with_script": null}], "references_secrets": []}]}, {"path": ".github/workflows/codeql-analysis.yml", "events": [{"name": "push", "types": [], "branches": ["main"], "branches_ignore": [], "paths": [], "paths_ignore": [], "tags": [], "tags_ignore": [], "cron": [], "inputs": [], "outputs": [], "secrets": [], "workflows": []}, {"name": "pull_request", "types": [], "branches": ["main"], "branches_ignore": [], "paths": [], "paths_ignore": [], "tags": [], "tags_ignore": [], "cron": [], "inputs": [], "outputs": [], "secrets": [], "workflows": []}, {"name": "schedule", "types": [], "branches": [], "branches_ignore": [], "paths": [], "paths_ignore": [], "tags": [], "tags_ignore": [], "cron": ["28 9 * * 0"], "inputs": [], "outputs": [], "secrets": [], "workflows": []}], "permissions": [], "env": [], "jobs": [{"id": "analyze", "name": "Analyze", "permissions": [{"scope": "actions", "permission": "read"}, {"scope": "contents", "permission": "read"}, {"scope": "security-events", "permission": "write"}], "needs": [], "if": null, "runs_on": ["ubuntu-latest"], "container": null, "environment": [], "outputs": [], "env": [], "steps": [{"id": null, "name": "Checkout repository", "if": null, "env": [], "uses": "actions/checkout@v3", "shell": null, "run": null, "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Initialize CodeQL", "if": null, "env": [], "uses": "github/codeql-action/init@v2", "shell": null, "run": null, "working_directory": null, "with": [{"name": "languages", "value": "${{ matrix.language }}"}], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": null, "env": [], "uses": null, "shell": null, "run": "npm ci", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": null, "env": [], "uses": null, "shell": null, "run": "npm run build", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": null, "env": [], "uses": null, "shell": null, "run": "rm -rf dist", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Perform CodeQL Analysis", "if": null, "env": [], "uses": "github/codeql-action/analyze@v2", "shell": null, "run": null, "working_directory": null, "with": [], "with_ref": null, "with_script": null}], "references_secrets": []}]}, {"path": ".github/workflows/licensed.yml", "events": [{"name": "push", "types": [], "branches": ["main"], "branches_ignore": [], "paths": [], "paths_ignore": [], "tags": [], "tags_ignore": [], "cron": [], "inputs": [], "outputs": [], "secrets": [], "workflows": []}, {"name": "pull_request", "types": [], "branches": ["main"], "branches_ignore": [], "paths": [], "paths_ignore": [], "tags": [], "tags_ignore": [], "cron": [], "inputs": [], "outputs": [], "secrets": [], "workflows": []}], "permissions": [], "env": [], "jobs": [{"id": "test", "name": "Check licenses", "permissions": [], "needs": [], "if": null, "runs_on": ["ubuntu-latest"], "container": null, "environment": [], "outputs": [], "env": [], "steps": [{"id": null, "name": null, "if": null, "env": [], "uses": "actions/checkout@v3", "shell": null, "run": null, "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": null, "env": [], "uses": null, "shell": null, "run": "npm ci", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": null, "env": [], "uses": null, "shell": null, "run": "npm run licensed-check", "working_directory": null, "with": [], "with_ref": null, "with_script": null}], "references_secrets": []}]}, {"path": ".github/workflows/test.yml", "events": [{"name": "pull_request", "types": [], "branches": [], "branches_ignore": [], "paths": [], "paths_ignore": [], "tags": [], "tags_ignore": [], "cron": [], "inputs": [], "outputs": [], "secrets": [], "workflows": []}, {"name": "push", "types": [], "branches": ["main", "releases/*"], "branches_ignore": [], "paths": [], "paths_ignore": [], "tags": [], "tags_ignore": [], "cron": [], "inputs": [], "outputs": [], "secrets": [], "workflows": []}], "permissions": [], "env": [], "jobs": [{"id": "build", "name": null, "permissions": [], "needs": [], "if": null, "runs_on": ["ubuntu-latest"], "container": null, "environment": [], "outputs": [], "env": [], "steps": [{"id": null, "name": null, "if": null, "env": [], "uses": "actions/setup-node@v1", "shell": null, "run": null, "working_directory": null, "with": [{"name": "node-version", "value": "20.x"}], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": null, "env": [], "uses": "actions/checkout@v3", "shell": null, "run": null, "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": null, "env": [], "uses": null, "shell": null, "run": "npm ci", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": null, "env": [], "uses": null, "shell": null, "run": "npm run build", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": null, "env": [], "uses": null, "shell": null, "run": "npm run format-check", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": null, "env": [], "uses": null, "shell": null, "run": "npm run lint", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": null, "if": null, "env": [], "uses": null, "shell": null, "run": "npm test", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Verify no unstaged changes", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-no-unstaged-changes.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}], "references_secrets": []}, {"id": "test", "name": null, "permissions": [], "needs": [], "if": null, "runs_on": ["${{ matrix.runs-on }}"], "container": null, "environment": [], "outputs": [], "env": [], "steps": [{"id": null, "name": "Checkout", "if": null, "env": [], "uses": "actions/checkout@v3", "shell": null, "run": null, "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout basic", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/basic"}, {"name": "path", "value": "basic"}], "with_ref": "test-data/v2/basic", "with_script": null}, {"id": null, "name": "Verify basic", "if": null, "env": [], "uses": null, "shell": "bash", "run": "__test__/verify-basic.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Modify work tree", "if": null, "env": [], "uses": null, "shell": "bash", "run": "__test__/modify-work-tree.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout clean", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/basic"}, {"name": "path", "value": "basic"}], "with_ref": "test-data/v2/basic", "with_script": null}, {"id": null, "name": "Verify clean", "if": null, "env": [], "uses": null, "shell": "bash", "run": "__test__/verify-clean.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout side by side 1", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/side-by-side-1"}, {"name": "path", "value": "side-by-side-1"}], "with_ref": "test-data/v2/side-by-side-1", "with_script": null}, {"id": null, "name": "Checkout side by side 2", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/side-by-side-2"}, {"name": "path", "value": "side-by-side-2"}], "with_ref": "test-data/v2/side-by-side-2", "with_script": null}, {"id": null, "name": "Verify side by side", "if": null, "env": [], "uses": null, "shell": "bash", "run": "__test__/verify-side-by-side.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Fetch filter", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "filter", "value": "blob:none"}, {"name": "path", "value": "fetch-filter"}], "with_ref": null, "with_script": null}, {"id": null, "name": "Verify fetch filter", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-fetch-filter.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Sparse checkout", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "sparse-checkout", "value": "__test__\n.github\ndist\n"}, {"name": "path", "value": "sparse-checkout"}], "with_ref": null, "with_script": null}, {"id": null, "name": "Verify sparse checkout", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-sparse-checkout.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Sparse checkout (non-cone mode)", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "sparse-checkout", "value": "/__test__/\n/.github/\n/dist/\n"}, {"name": "sparse-checkout-cone-mode", "value": "False"}, {"name": "path", "value": "sparse-checkout-non-cone-mode"}], "with_ref": null, "with_script": null}, {"id": null, "name": "Verify sparse checkout (non-cone mode)", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-sparse-checkout-non-cone-mode.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout LFS", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "repository", "value": "actions/checkout"}, {"name": "ref", "value": "test-data/v2/lfs"}, {"name": "path", "value": "lfs"}, {"name": "lfs", "value": "True"}], "with_ref": "test-data/v2/lfs", "with_script": null}, {"id": null, "name": "Verify LFS", "if": null, "env": [], "uses": null, "shell": "bash", "run": "__test__/verify-lfs.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout submodules false", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/submodule-ssh-url"}, {"name": "path", "value": "submodules-false"}], "with_ref": "test-data/v2/submodule-ssh-url", "with_script": null}, {"id": null, "name": "Verify submodules false", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-submodules-false.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout submodules true", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/submodule-ssh-url"}, {"name": "path", "value": "submodules-true"}, {"name": "submodules", "value": "True"}], "with_ref": "test-data/v2/submodule-ssh-url", "with_script": null}, {"id": null, "name": "Verify submodules true", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-submodules-true.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout submodules recursive", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/submodule-ssh-url"}, {"name": "path", "value": "submodules-recursive"}, {"name": "submodules", "value": "recursive"}], "with_ref": "test-data/v2/submodule-ssh-url", "with_script": null}, {"id": null, "name": "Verify submodules recursive", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-submodules-recursive.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Remove basic", "if": "runner.os != 'windows'", "env": [], "uses": null, "shell": null, "run": "rm -rf basic", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Remove basic (Windows)", "if": "runner.os == 'windows'", "env": [], "uses": null, "shell": "cmd", "run": "rmdir /s /q basic", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Override git version", "if": "runner.os != 'windows'", "env": [], "uses": null, "shell": null, "run": "__test__/override-git-version.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Override git version (Windows)", "if": "runner.os == 'windows'", "env": [], "uses": null, "shell": null, "run": "__test__\\\\override-git-version.cmd", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout basic using REST API", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/basic"}, {"name": "path", "value": "basic"}], "with_ref": "test-data/v2/basic", "with_script": null}, {"id": null, "name": "Verify basic", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-basic.sh --archive", "working_directory": null, "with": [], "with_ref": null, "with_script": null}], "references_secrets": []}, {"id": "test-proxy", "name": null, "permissions": [], "needs": [], "if": null, "runs_on": ["ubuntu-latest"], "container": {"image": "alpine/git:latest"}, "environment": [], "outputs": [], "env": [], "steps": [{"id": null, "name": "Checkout", "if": null, "env": [], "uses": "actions/checkout@v3", "shell": null, "run": null, "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout basic", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/basic"}, {"name": "path", "value": "basic"}], "with_ref": "test-data/v2/basic", "with_script": null}, {"id": null, "name": "Verify basic", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-basic.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Remove basic", "if": null, "env": [], "uses": null, "shell": null, "run": "rm -rf basic", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Override git version", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/override-git-version.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Basic checkout using REST API", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/basic"}, {"name": "path", "value": "basic"}], "with_ref": "test-data/v2/basic", "with_script": null}, {"id": null, "name": "Verify basic", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-basic.sh --archive", "working_directory": null, "with": [], "with_ref": null, "with_script": null}], "references_secrets": []}, {"id": "test-bypass-proxy", "name": null, "permissions": [], "needs": [], "if": null, "runs_on": ["ubuntu-latest"], "container": null, "environment": [], "outputs": [], "env": [], "steps": [{"id": null, "name": "Checkout", "if": null, "env": [], "uses": "actions/checkout@v3", "shell": null, "run": null, "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout basic", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/basic"}, {"name": "path", "value": "basic"}], "with_ref": "test-data/v2/basic", "with_script": null}, {"id": null, "name": "Verify basic", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-basic.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Remove basic", "if": null, "env": [], "uses": null, "shell": null, "run": "rm -rf basic", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Override git version", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/override-git-version.sh", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout basic using REST API", "if": null, "env": [], "uses": "./", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/basic"}, {"name": "path", "value": "basic"}], "with_ref": "test-data/v2/basic", "with_script": null}, {"id": null, "name": "Verify basic", "if": null, "env": [], "uses": null, "shell": null, "run": "__test__/verify-basic.sh --archive", "working_directory": null, "with": [], "with_ref": null, "with_script": null}], "references_secrets": []}, {"id": "test-git-container", "name": null, "permissions": [], "needs": [], "if": null, "runs_on": ["ubuntu-latest"], "container": {"image": "bitnami/git:latest"}, "environment": [], "outputs": [], "env": [], "steps": [{"id": null, "name": "Checkout", "if": null, "env": [], "uses": "actions/checkout@v3", "shell": null, "run": null, "working_directory": null, "with": [{"name": "path", "value": "v3"}], "with_ref": null, "with_script": null}, {"id": null, "name": "Checkout basic", "if": null, "env": [], "uses": "./v3", "shell": null, "run": null, "working_directory": null, "with": [{"name": "ref", "value": "test-data/v2/basic"}], "with_ref": "test-data/v2/basic", "with_script": null}, {"id": null, "name": "Verify basic", "if": null, "env": [], "uses": null, "shell": null, "run": "if [ ! -f \"./basic-file.txt\" ]; then\n echo \"Expected basic file does not exist\"\n exit 1\nfi\n\n# Verify .git folder\nif [ ! -d \"./.git\" ]; then\n echo \"Expected ./.git folder to exist\"\n exit 1\nfi\n\n# Verify auth token\ngit config --global --add safe.directory \"*\"\ngit fetch --no-tags --depth=1 origin +refs/heads/main:refs/remotes/origin/main\n", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Fix Checkout v3", "if": null, "env": [], "uses": "actions/checkout@v3", "shell": null, "run": null, "working_directory": null, "with": [{"name": "path", "value": "v3"}], "with_ref": null, "with_script": null}], "references_secrets": []}]}, {"path": ".github/workflows/update-main-version.yml", "events": [{"name": "workflow_dispatch", "types": [], "branches": [], "branches_ignore": [], "paths": [], "paths_ignore": [], "tags": [], "tags_ignore": [], "cron": [], "inputs": [{"name": "target", "description": "The tag or reference to use", "required": true, "type": "string"}, {"name": "major_version", "description": "The major version to update", "required": false, "type": "choice"}], "outputs": [], "secrets": [], "workflows": []}], "permissions": [], "env": [], "jobs": [{"id": "tag", "name": null, "permissions": [], "needs": [], "if": null, "runs_on": ["ubuntu-latest"], "container": null, "environment": [], "outputs": [], "env": [], "steps": [{"id": null, "name": null, "if": null, "env": [], "uses": "actions/checkout@v3", "shell": null, "run": null, "working_directory": null, "with": [{"name": "fetch-depth", "value": "0"}], "with_ref": null, "with_script": null}, {"id": null, "name": "Git config", "if": null, "env": [], "uses": null, "shell": null, "run": "git config user.name github-actions\ngit config user.email github-actions@github.com\n", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Tag new target", "if": null, "env": [], "uses": null, "shell": null, "run": "git tag -f ${{ github.event.inputs.major_version }} ${{ github.event.inputs.target }}", "working_directory": null, "with": [], "with_ref": null, "with_script": null}, {"id": null, "name": "Push new tag", "if": null, "env": [], "uses": null, "shell": null, "run": "git push origin ${{ github.event.inputs.major_version }} --force", "working_directory": null, "with": [], "with_ref": null, "with_script": null}], "references_secrets": []}]}], "github_actions_metadata": [{"path": "action.yml", "name": "Checkout", "author": "", "description": "Checkout a Git repository at a particular version", "inputs": [{"name": "repository", "description": "Repository name with owner. For example, actions/checkout", "required": false, "type": "string"}, {"name": "ref", "description": "The branch, tag or SHA to checkout. When checking out the repository that triggered a workflow, this defaults to the reference or SHA for that event. Otherwise, uses the default branch.\n", "required": false, "type": "string"}, {"name": "token", "description": "Personal access token (PAT) used to fetch the repository. The PAT is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the PAT.\n\nWe recommend using a service account with the least permissions necessary. Also when generating a new PAT, select the least scopes necessary.\n\n[Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)\n", "required": false, "type": "string"}, {"name": "ssh-key", "description": "SSH key used to fetch the repository. The SSH key is configured with the local git config, which enables your scripts to run authenticated git commands. The post-job step removes the SSH key.\n\nWe recommend using a service account with the least permissions necessary.\n\n[Learn more about creating and using encrypted secrets](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets)\n", "required": false, "type": "string"}, {"name": "ssh-known-hosts", "description": "Known hosts in addition to the user and global host key database. The public SSH keys for a host may be obtained using the utility `ssh-keyscan`. For example, `ssh-keyscan github.com`. The public key for github.com is always implicitly added.\n", "required": false, "type": "string"}, {"name": "ssh-strict", "description": "Whether to perform strict host key checking. When true, adds the options `StrictHostKeyChecking=yes` and `CheckHostIP=no` to the SSH command line. Use the input `ssh-known-hosts` to configure additional hosts.\n", "required": false, "type": "string"}, {"name": "persist-credentials", "description": "Whether to configure the token or SSH key with the local git config", "required": false, "type": "string"}, {"name": "path", "description": "Relative path under $GITHUB_WORKSPACE to place the repository", "required": false, "type": "string"}, {"name": "clean", "description": "Whether to execute `git clean -ffdx && git reset --hard HEAD` before fetching", "required": false, "type": "string"}, {"name": "filter", "description": "Partially clone against a given filter. Overrides sparse-checkout if set.\n", "required": false, "type": "string"}, {"name": "sparse-checkout", "description": "Do a sparse checkout on given patterns. Each pattern should be separated with new lines.\n", "required": false, "type": "string"}, {"name": "sparse-checkout-cone-mode", "description": "Specifies whether to use cone-mode when doing a sparse checkout.\n", "required": false, "type": "string"}, {"name": "fetch-depth", "description": "Number of commits to fetch. 0 indicates all history for all branches and tags.", "required": false, "type": "string"}, {"name": "fetch-tags", "description": "Whether to fetch tags, even if fetch-depth > 0.", "required": false, "type": "string"}, {"name": "show-progress", "description": "Whether to show progress status output when fetching.", "required": false, "type": "string"}, {"name": "lfs", "description": "Whether to download Git-LFS files", "required": false, "type": "string"}, {"name": "submodules", "description": "Whether to checkout submodules: `true` to checkout submodules or `recursive` to recursively checkout submodules.\n\nWhen the `ssh-key` input is not provided, SSH URLs beginning with `git@github.com:` are converted to HTTPS.\n", "required": false, "type": "string"}, {"name": "set-safe-directory", "description": "Add repository path as safe.directory for Git global config by running `git config --global --add safe.directory `", "required": false, "type": "string"}, {"name": "github-server-url", "description": "The base URL for the GitHub instance that you are trying to clone from, will use environment defaults to fetch from the same instance that the workflow is running from unless specified. Example URLs are https://github.com or https://my-ghes-server.example.com", "required": false, "type": "string"}], "outputs": [], "runs": {"using": "node20", "main": "dist/index.js", "pre": null, "pre-if": null, "post": "dist/index.js", "post-if": null, "steps": [], "image": null, "entrypoint": null, "pre-entrypoint": null, "post-entrypoint": null, "args": []}}]}
